"use strict";
/*
DO NOT EDIT THIS FILE DIRECTLY - it is auto-generated. Instead, edit the source files - see gulpfile for details.
*/

angular.module('dcc.config', [])
.constant('configService', function() {
  var o = { };

  return o;
}());

"use strict";
/*
DO NOT EDIT THIS FILE DIRECTLY - it is auto-generated. Instead, edit the source files - see gulpfile for details.
*/

angular.module('dcc.chess', [
  'ui.router', //external
  'dcc.config',
  //'dcc.dummyServer', // comment/uncomment this line to switch between real and dummy server *** TODO: figure out how to switch via config
  'dcc.templates',
  'dcc.data',
  'dcc.position'
])
.config(function($logProvider, $urlRouterProvider, $stateProvider) {
  $logProvider.debugEnabled(false);

  $urlRouterProvider.otherwise('/position');

  $stateProvider
    .state('position', { url: '/position?fen' });
})
.directive('chess', function() {
  return {
    restrict: 'E',
    templateUrl: 'components/chess/chess.html',
    controller: 'ChessController',
    controllerAs: 'chess'
  };
})
.controller('ChessController', function() {
  var vm = this;
})
.factory('chessjs', function($window) {
  return new $window.Chess();
});

"use strict";
/*
DO NOT EDIT THIS FILE DIRECTLY - it is auto-generated. Instead, edit the source files - see gulpfile for details.
*/

angular.module('dcc.position', ['dcc.board'])
.directive('position', function() {
  return {
    restrict: 'E',
    templateUrl: 'components/position/position.html',
    controller: 'PositionController',
    controllerAs: 'position'
  };
})
.controller('PositionController', function($scope, $state, $stateParams, dataService, $window, chessjs) {
  var vm = this;

  vm.positions = [
    { fen: 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1' },
    { fen: 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1' },
    { fen: 'rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq c6 0 2' },
    { fen: 'rnbqkbnr/pp1ppppp/8/2p5/4P3/5N2/PPPP1PPP/RNBQKB1R b KQkq - 1 2' },
    { fen: 'r2qkb1r/pp2pppp/2bp1n2/6B1/3QP3/2N2N2/PPP2PPP/R3K2R b KQkq - 3 8' },
    { fen: 'r2qkb1r/pp3ppp/2bppn2/6B1/3QP3/2N2N2/PPP2PPP/R3K2R w KQkq - 0 9' }
  ];

  $scope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {
    //if fen not valid, prevent state change and go to start position
    var startPositionFen = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';
    var fen = toParams.fen || startPositionFen; //use start position if no fen
    var isValidFen = chessjs.validate_fen(fen).valid;
    if (!isValidFen) { event.preventDefault(); $state.go('position', { fen: undefined }); } //change state if fen invalid
  });

  $scope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
    //get new position data
    vm.fen = toParams.fen;
    dataService.addPosition(toParams.fen);
    //dataService.getPositionData(toParams.fen).then(callback);
  });

  function callback(data) {
    vm.dataLoaded = true;
    vm.myMoves = data.myMoves;
  }
});

"use strict";
/*
DO NOT EDIT THIS FILE DIRECTLY - it is auto-generated. Instead, edit the source files - see gulpfile for details.
*/

/*
Notes:
  "chessjs" - chess.js -- javascript library for chess logic (no graphics - i.e. no html/css) 
  "boardjs" - chessboard.js -- graphical chess board (no chess logic)
  "nBoard" - nywtonChessboard - angular-chessboard -- angular wrapper for boardjs
  "board" - dcc.board -- board + logic

todo:
  orientation + option (auto / switch)
  latest move + option
*/

angular.module('dcc.board', ['nywton.chess'])
.config(['nywtonChessboardConfigProvider', function nywtonChessConfigConfig(chessboardProvider) {
  chessboardProvider.pieceTheme('images/chesspieces/wikipedia/{piece}.png');
  chessboardProvider.showNotation = false;
}])
.directive('board', function() {
  return {
    restrict: 'E',
    templateUrl: 'components/board/board.html',
    controller: 'BoardController',
    controllerAs: 'board',
    scope: {
      fen: '='
    }
  };
})
.controller('BoardController', function($scope, $state, chessjs) {
  var vm = this;

  $scope.$watch('fen', function(fen) {
    if (fen === undefined) return;

    chessjs.load(fen);
    vm.turn = chessjs.turn();
    vm.nBoard.position(fen);
  });

  vm.onDrop = function(source, target, piece, newPos, oldPos, orientation) {
    //if not a valid move, snapback
    if ( !chessjs.move({ from: source, to: target }) ) { return 'snapback'; }
  };

  vm.onSnapEnd = function(source, target, piece) {
    //successful move => change state
    $state.go('position', { fen: chessjs.fen() });
  };
});

"use strict";
/*
DO NOT EDIT THIS FILE DIRECTLY - it is auto-generated. Instead, edit the source files - see gulpfile for details.
*/

angular.module('dcc.data', [])
.factory('dataService', function($q, api) {
  var o = {};

  o.addPosition = function(fen) {
    var setData = function(response) {
      console.log('response', response);
    };
    return api.addPosition(fen).then(setData).catch( function(err) { console.log('err', err); } );
  };

  o.getPositionData = function(fen) {
    var setData = function(response) {
      return response.data;
    };
    return api.getPositionForUser(fen).then(setData);
  };

  return o;
})
.factory('api', function($http, configService) {
  // #stateless
  // interacts with the server
  var o = {};

  o.addPosition = function(fen) {
    //*** wip
    var data = { fen: fen };
    var url = 'http://localhost:5000/api/positions';
    console.log(data, url);
    return $http({
      method: 'PUT',
      url: url,
      headers: {'Content-Type': 'application/x-www-form-urlencoded'},
      transformRequest: function(obj) {
          var str = [];
          for(var p in obj)
          str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
          return str.join("&");
      },
      data: data
    });
  };

  o.getPositionForUser = function(fen) {
    return $http.get('/position-for-user?fen=' + fen);
  };

  return o;
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy5qcyIsImNvbXBvbmVudHMvY2hlc3MvY2hlc3MuanMiLCJjb21wb25lbnRzL3Bvc2l0aW9uL3Bvc2l0aW9uLmpzIiwiY29tcG9uZW50cy9ib2FyZC9ib2FyZC5qcyIsImNvbXBvbmVudHMvZGF0YS9kYXRhLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ1hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDOUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDdERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiZGV2L3NyYy5qcyIsInNvdXJjZVJvb3QiOlsiLi4vc3JjL3NyYy9jb25maWcuanMiLCIuLi9zcmMvKiovKi5qcyJdfQ==